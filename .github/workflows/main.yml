name: Release app
on:
  push:
    branches:
      - main
jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: NODE_ENV=production npm run build
      - name: 'Upload build'
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
          retention-days: 1

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
      contents: read
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/wolbodo/cms
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: wlbd
    needs:
      - publish
    steps:
      - uses: actions/checkout@master
      - name: Copy environment
        run: cp ~/config/cms.env .env
      - name: Pull dependencies
        run: docker-compose pull -q
      - name: Deploy services
        run: docker-compose up -d